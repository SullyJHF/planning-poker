# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Accept build arguments
ARG REACT_APP_SERVER_URL
ENV REACT_APP_SERVER_URL=$REACT_APP_SERVER_URL

# Accept version build arguments
ARG REACT_APP_VERSION
ARG REACT_APP_BUILD_HASH
ARG REACT_APP_BUILD_BRANCH
ARG REACT_APP_BUILD_TIME
ENV REACT_APP_VERSION=$REACT_APP_VERSION
ENV REACT_APP_BUILD_HASH=$REACT_APP_BUILD_HASH
ENV REACT_APP_BUILD_BRANCH=$REACT_APP_BUILD_BRANCH
ENV REACT_APP_BUILD_TIME=$REACT_APP_BUILD_TIME

# Accept proxy build arguments for VPN/corporate environments
ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG NO_PROXY
ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTPS_PROXY
ENV NO_PROXY=$NO_PROXY

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev deps needed for build)
RUN npm install

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built application from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]