version: '3.8'

services:
  planning-poker-client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: planning-poker-client
    restart: unless-stopped
    networks:
      - traefik
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.planning-poker-client.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.planning-poker-client.tls=true"
      - "traefik.http.routers.planning-poker-client.tls.certresolver=${CERT_RESOLVER:-letsencrypt}"
      - "traefik.http.services.planning-poker-client.loadbalancer.server.port=80"
      # Security headers
      - "traefik.http.middlewares.planning-poker-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.planning-poker-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.planning-poker-headers.headers.customRequestHeaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.routers.planning-poker-client.middlewares=planning-poker-headers"

  planning-poker-server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: planning-poker-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - CLIENT_URL=https://${DOMAIN}
      - CORS_ORIGIN=https://${DOMAIN}
    networks:
      - traefik
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.planning-poker-server.rule=Host(`${DOMAIN}`) && PathPrefix(`/socket.io`)"
      - "traefik.http.routers.planning-poker-server.tls=true"
      - "traefik.http.routers.planning-poker-server.tls.certresolver=${CERT_RESOLVER:-letsencrypt}"
      - "traefik.http.services.planning-poker-server.loadbalancer.server.port=3001"
    depends_on:
      - planning-poker-client

networks:
  traefik:
    external: true
  internal:
    driver: bridge
    internal: true
